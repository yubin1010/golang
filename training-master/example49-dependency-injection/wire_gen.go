// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-training/example49-dependency-injection/config"
)

import (
	_ "github.com/joho/godotenv/autoload"
)

// Injectors from wire.go:

func InitializeApplication(cfg config.Config) (*application, error) {
	service, err := provideCache(cfg)
	if err != nil {
		return nil, err
	}
	ldapService, err := provideLDAP(cfg, service)
	if err != nil {
		return nil, err
	}
	crowdService, err := provideCROWD(cfg, service)
	if err != nil {
		return nil, err
	}
	userService, err := provideUser(ldapService, crowdService, service)
	if err != nil {
		return nil, err
	}
	handler := provideRouter(cfg, userService)
	mainApplication := newApplication(handler, userService)
	return mainApplication, nil
}
